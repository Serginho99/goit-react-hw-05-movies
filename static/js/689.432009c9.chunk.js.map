{"version":3,"file":"static/js/689.432009c9.chunk.js","mappings":"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","sources":["components/MovieItem/MovieItem.styled.jsx","components/MovieItem/MovieItem.jsx","components/MovieList/MoviesList.styled.jsx","components/MovieList/MoviesList.jsx","components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","components/Pages/MoviesPage/MoviesPage.jsx","services/fetchMovies.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  box-shadow: rgb(204 204 204) 0px 0px 8px 1px;\n  border-radius: 5px;\n  /* & + & {\n    margin-left: 20px;\n  } */\n  margin-bottom: 10px;\n  width: 320px;\n`;\nexport const Img = styled.img`\n  width: 100%;\n  height: 400px;\n  /* object-fit: cover; */\n`;\n\nexport const LinkItem = styled(Link)`\n  text-decoration: none;\n  color: black;\n  font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande',\n    'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\n`;\n\nexport const Title = styled.h2`\n  font-weight: 200;\n`;\n","// import { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { ListItem, Img, LinkItem, Title } from './MovieItem.styled';\nimport defaultImage from '../../Images/default-poster.jpg';\n\nexport default function MovieItem({ id, original_title, poster_path }) {\n  const location = useLocation();\n  const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n  const IMG = poster_path ? `${IMG_URL}/${poster_path}` : defaultImage;\n  return (\n    <ListItem key={id}>\n      <LinkItem to={`/movies/${id}`} state={{ from: location }}>\n        <Img src={IMG} alt=\"\" />\n        <Title>{original_title}</Title>\n      </LinkItem>\n    </ListItem>\n  );\n}\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  /* list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  text-align: center; */\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-top: 16px;\n  padding-bottom: 16px;\n  list-style: none;\n`;\n","import MovieItem from 'components/MovieItem/MovieItem';\nimport { List } from './MoviesList.styled';\nexport default function MovieList({ items }) {\n  return (\n    <>\n      <List>\n        {items.map(item => {\n          return <MovieItem key={item.id} {...item} />;\n        })}\n      </List>\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  width: 400px;\n  font-size: 16px;\n  padding: 6px 80px 6px 6px;\n  outline: none;\n  border: 2px solid rgb(204, 204, 204);\n  border-radius: 5px;\n  transition: border-color 200ms linear 0s;\n`;\n\nexport const Wrapper = styled.div`\n  display: block;\n  position: relative;\n`;\n\nexport const ButtonWrapper = styled.button`\n  position: absolute;\n  top: 0px;\n  right: 0px;\n  height: 100%;\n  /* display: flex; */\n  /* -webkit-box-pack: center; */\n  justify-content: center;\n  /* -webkit-box-align: center; */\n  outline: none;\n  align-items: center;\n  border: 2px solid rgb(204, 204, 204);\n  /* border: none; */\n  border-top-right-radius: 5px;\n  border-bottom-right-radius: 5px;\n  background-color: rgb(255, 255, 255);\n  color: rgb(0, 109, 186);\n  font-size: 16px;\n  font-weight: 500;\n  text-transform: uppercase;\n  cursor: pointer;\n  transition: all 200ms linear 0s;\n  :hover {\n    background-color: #5e5eef;\n    color: white;\n    border: none;\n  }\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  -webkit-box-pack: center;\n  justify-content: center;\n  padding: 20px 0px;\n`;\n","import { useState } from 'react';\nimport { Input, ButtonWrapper, Form, Wrapper } from './SearchBar.styled';\n\nexport default function SearchBar({ submit }) {\n  const [moviesName, setMoviesName] = useState('');\n\n  function handleChange(e) {\n    setMoviesName(e.target.value.toLowerCase());\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    submit({ moviesName });\n    reset();\n  }\n\n  function reset() {\n    setMoviesName('');\n  }\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Wrapper>\n        <Input\n          name=\"movieName\"\n          value={moviesName}\n          type=\"text\"\n          onChange={handleChange}\n        />\n        <ButtonWrapper type=\"submit\">Search</ButtonWrapper>\n      </Wrapper>\n    </Form>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { fetchMovieByQuery } from 'services/fetchMovies';\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport MovieList from 'components/MovieList/MoviesList';\nimport { useSearchParams } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\n\nexport default function MoviesPage() {\n  const [movies, setMovies] = useState([]);\n  const [movieName, setMovieName] = useState('');\n  const [page, setPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const nameFilm = searchParams.get('name_film') ?? '';\n  // console.log(nameFilm);\n\n  useEffect(() => {\n    async function getMoviesByQuery() {\n      setLoading(true);\n      try {\n        const data = await fetchMovieByQuery(nameFilm, page);\n        setMovies(prev => [...prev, ...data.results]);\n      } finally {\n        setLoading(false);\n      }\n    }\n    if (nameFilm) {\n      getMoviesByQuery();\n    }\n  }, [nameFilm, page]);\n\n  function handleSubmit({ moviesName }) {\n    setMovieName(moviesName);\n    setSearchParams({ name_film: moviesName });\n  }\n\n  function onLoadMore() {\n    setPage(page => page + 1);\n  }\n\n  return (\n    <>\n      <SearchBar submit={handleSubmit} />\n      {loading && <Loader />}\n      {movies && <MovieList items={movies} />}\n      {movieName && (\n        <button type=\"button\" onClick={onLoadMore}>\n          Load more\n        </button>\n      )}\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = `4d4e27deea421fc269c2758df5384469`;\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function fetchTrendingFilms(page) {\n  const res = await axios.get(\n    `${BASE_URL}/trending/movie/week?api_key=${API_KEY}&page=${page}`\n  );\n  return res.data;\n}\n\nexport async function fetchMovieByQuery(query, page) {\n  const res = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`\n  );\n  return res.data;\n}\n\nexport async function movieDetailsById(id) {\n  const res = await axios.get(`\n  ${BASE_URL}/movie/${id}?api_key=${API_KEY}\n  `);\n  return res.data;\n}\n\nexport async function fetchActorsFilm(id) {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n    );\n    return res.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function fetchReviews(id) {\n  try {\n    const res = await axios.get(`\n    ${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}\n    `);\n    return res.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}"],"names":["ListItem","styled","Img","LinkItem","Link","Title","MovieItem","id","original_title","poster_path","location","useLocation","IMG","defaultImage","to","state","from","src","alt","List","MovieList","items","map","item","Input","Wrapper","ButtonWrapper","Form","SearchBar","submit","useState","moviesName","setMoviesName","onSubmit","e","preventDefault","name","value","type","onChange","target","toLowerCase","MoviesPage","movies","setMovies","movieName","setMovieName","page","setPage","loading","setLoading","useSearchParams","searchParams","setSearchParams","nameFilm","get","useEffect","fetchMovieByQuery","data","prev","results","getMoviesByQuery","name_film","Loader","onClick","API_KEY","BASE_URL","fetchTrendingFilms","axios","res","query","movieDetailsById","fetchActorsFilm","console","log","message","fetchReviews","_defineProperty","obj","key","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties"],"sourceRoot":""}