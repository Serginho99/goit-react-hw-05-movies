{"version":3,"file":"static/js/949.de730591.chunk.js","mappings":"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","sources":["components/MovieItem/MovieItem.styled.jsx","components/MovieItem/MovieItem.jsx","components/MovieList/MoviesList.styled.jsx","components/MovieList/MoviesList.jsx","pages/HomePage/HomePage.styled.jsx","components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","pages/HomePage/MoviesPage/MoviesPage.jsx","services/fetchMovies.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  box-shadow: rgb(204 204 204) 0px 0px 8px 1px;\n  border-radius: 5px;\n  width: 300px;\n`;\nexport const Img = styled.img`\n  width: 100%;\n  height: 400px;\n  /* object-fit: contain; */\n`;\n\nexport const LinkItem = styled(Link)`\n  text-decoration: none;\n  color: black;\n  font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande',\n    'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\n`;\n\nexport const Title = styled.h2`\n  font-weight: 500;\n  margin: 0;\n  padding: 10px;\n`;\n\nexport const Span = styled.span`\n  font-weight: 100;\n`;\n","// import { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { ListItem, Img, LinkItem, Title, Span } from './MovieItem.styled';\nimport defaultImage from '../../Images/default-poster.jpg';\n\nexport default function MovieItem({\n  id,\n  original_title,\n  poster_path,\n  release_date,\n}) {\n  const date = release_date ? <Span>({release_date.slice(0, 4)})</Span> : '';\n  const location = useLocation();\n  const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n  const IMG = poster_path ? `${IMG_URL}/${poster_path}` : defaultImage;\n  return (\n    <ListItem>\n      <LinkItem to={`/movies/${id}`} state={{ from: location }}>\n        <Img src={IMG} alt=\"\" />\n        <Title>\n          {original_title} {date}\n        </Title>\n      </LinkItem>\n    </ListItem>\n  );\n}\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  /* list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  text-align: center; */\n  display: flex;\n  /* max-width: calc(100vw - 48px); */\n  /* grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px; */\n  flex-wrap: wrap;\n  gap: 20px;\n  margin: 0;\n  justify-content: center;\n  padding-top: 16px;\n  padding-bottom: 16px;\n  padding-left: 0;\n  list-style: none;\n`;\n","import MovieItem from 'components/MovieItem/MovieItem';\nimport { List } from './MoviesList.styled';\nexport default function MovieList({ items }) {\n  return (\n    <>\n      <List>\n        {items.map(item => {\n          return <MovieItem key={item.id} {...item} />;\n        })}\n      </List>\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande',\n    'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\n  margin: 0;\n  margin-left: 200px;\n`;\n\nexport const Button = styled.button`\n  padding: 8px 16px;\n  border-radius: 2px;\n  background-color: #5e5eef;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  margin-bottom: 40px;\n  margin: 30px auto;\n`;\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  width: 400px;\n  height: 20px;\n  font-size: 16px;\n  padding: 6px 80px 6px 6px;\n  outline: none;\n  border: 2px solid rgb(204, 204, 204);\n  border-radius: 5px;\n  transition: border-color 200ms linear 0s;\n`;\n\nexport const Wrapper = styled.div`\n  display: block;\n  position: relative;\n`;\n\nexport const ButtonWrapper = styled.button`\n  position: absolute;\n  top: 0px;\n  right: 0px;\n  height: 100%;\n  justify-content: center;\n  outline: none;\n  align-items: center;\n  border: 2px solid rgb(204, 204, 204);\n  border-top-right-radius: 5px;\n  border-bottom-right-radius: 5px;\n  background-color: rgb(255, 255, 255);\n  color: rgb(0, 109, 186);\n  font-size: 16px;\n  font-weight: 500;\n  text-transform: uppercase;\n  cursor: pointer;\n  transition: all 200ms linear 0s;\n  :hover {\n    background-color: #5e5eef;\n    color: white;\n    border-color: #5e5eef;\n  }\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  -webkit-box-pack: center;\n  justify-content: center;\n  padding: 20px 0px;\n`;\n","import { useState } from 'react';\nimport { Input, ButtonWrapper, Form, Wrapper } from './SearchBar.styled';\nimport { Notify } from 'notiflix';\n\nexport default function SearchBar({ submit }) {\n  const [moviesName, setMoviesName] = useState('');\n\n  function handleChange(e) {\n    setMoviesName(e.target.value.toLowerCase());\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (moviesName.trim() === '') {\n      return Notify.info('Enter name film');\n    }\n    submit({ moviesName });\n    reset();\n  }\n\n  function reset() {\n    setMoviesName('');\n  }\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Wrapper>\n        <Input\n          name=\"movieName\"\n          value={moviesName}\n          type=\"text\"\n          onChange={handleChange}\n          autoComplete=\"off\"\n          placeholder=\"Search film\"\n        />\n        <ButtonWrapper type=\"submit\">Search</ButtonWrapper>\n      </Wrapper>\n    </Form>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { fetchMovieByQuery } from 'services/fetchMovies';\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport MovieList from 'components/MovieList/MoviesList';\nimport { useSearchParams } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport { Button } from '../HomePage.styled';\nimport { Notify } from 'notiflix';\n\nexport default function MoviesPage() {\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [totalPages, setTotalPages] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const nameFilm = searchParams.get('name_film') ?? '';\n  // console.log(nameFilm);\n\n  useEffect(() => {\n    async function getMoviesByQuery() {\n      setLoading(true);\n      try {\n        const data = await fetchMovieByQuery(nameFilm, page);\n        if (data.total_results === 0) {\n          return Notify.failure('No such films');\n        }\n        setMovies(prev => [...prev, ...data.results]);\n        const totalPages = Math.ceil(data.total_results / 20);\n        setTotalPages(totalPages);\n        if (page >= totalPages) {\n          Notify.warning(\n            \"We're sorry, but you've reached the end of search results.\"\n          );\n        }\n      } finally {\n        setLoading(false);\n      }\n    }\n    if (nameFilm) {\n      getMoviesByQuery();\n    }\n  }, [nameFilm, page]);\n\n  function handleSubmit({ moviesName }) {\n    setMovies([]);\n    setSearchParams({ name_film: moviesName });\n  }\n\n  function onLoadMore() {\n    setPage(page => page + 1);\n  }\n  const endList = page < totalPages;\n  const isFilms = movies?.length !== 0;\n\n  return (\n    <>\n      <SearchBar submit={handleSubmit} />\n      {movies && <MovieList items={movies} />}\n      {loading ? (\n        <Loader />\n      ) : (\n        endList &&\n        isFilms && (\n          <Button type=\"button\" onClick={onLoadMore}>\n            Load more\n          </Button>\n        )\n      )}\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = `4d4e27deea421fc269c2758df5384469`;\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function fetchTrendingFilms(page) {\n  const res = await axios.get(\n    `${BASE_URL}/trending/movie/week?api_key=${API_KEY}&page=${page}`\n  );\n  return res.data;\n}\n\nexport async function fetchMovieByQuery(query, page) {\n  const res = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`\n  );\n  return res.data;\n}\n\nexport async function movieDetailsById(id) {\n  const res = await axios.get(`\n  ${BASE_URL}/movie/${id}?api_key=${API_KEY}\n  `);\n  return res.data;\n}\n\nexport async function fetchActorsFilm(id) {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n    );\n    return res.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function fetchReviews(id) {\n  try {\n    const res = await axios.get(`\n    ${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}\n    `);\n    return res.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n"],"names":["ListItem","styled","Img","LinkItem","Link","Title","Span","MovieItem","id","original_title","poster_path","release_date","date","slice","location","useLocation","IMG","defaultImage","to","state","from","src","alt","List","MovieList","items","map","item","Button","Input","Wrapper","ButtonWrapper","Form","SearchBar","submit","useState","moviesName","setMoviesName","onSubmit","e","preventDefault","trim","Notify","name","value","type","onChange","target","toLowerCase","autoComplete","placeholder","MoviesPage","movies","setMovies","page","setPage","loading","setLoading","totalPages","setTotalPages","useSearchParams","searchParams","setSearchParams","nameFilm","get","useEffect","fetchMovieByQuery","data","total_results","prev","results","Math","ceil","getMoviesByQuery","endList","isFilms","length","name_film","Loader","onClick","API_KEY","BASE_URL","fetchTrendingFilms","axios","res","query","movieDetailsById","fetchActorsFilm","console","log","message","fetchReviews"],"sourceRoot":""}