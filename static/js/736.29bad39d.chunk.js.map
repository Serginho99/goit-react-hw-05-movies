{"version":3,"file":"static/js/736.29bad39d.chunk.js","mappings":"4PAEaA,EAAOC,EAAAA,GAAAA,GAAH,+GAQJC,EAAWD,EAAAA,GAAAA,GAAH,yCAIRE,EAAQF,EAAAA,GAAAA,GAAH,qLAOLG,EAAOH,EAAAA,GAAAA,EAAH,qLAOJI,EAAMJ,EAAAA,GAAAA,IAAH,wC,mBCtBD,SAASK,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBH,GAASI,KAAKL,EAC/B,GAAE,CAACC,IAIJ,OACE,SAACV,EAAD,iBACGQ,QADH,IACGA,OADH,EACGA,EAAQO,KAAKC,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,aAAcC,EAAS,EAATA,GAC5CC,EAAMF,EAAY,UALP,kCAKO,YACCA,GACrBG,EACJ,OACE,UAACpB,EAAD,WACG,KACD,SAACG,EAAD,CAAKkB,IAAKF,EAAKG,IAAI,GAAGC,MAAM,SAC5B,SAACtB,EAAD,UAAQc,KACR,UAACb,EAAD,yBAAkBc,OAJLE,EAOlB,KAGN,C,4MC/BKM,EAAO,mCACPC,EAAW,+BAEV,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAkCC,GAAlC,uFACaC,IAAAA,IAAA,UACbH,EADa,wCAC2BD,EAD3B,iBAC2CG,IAFxD,cACCE,EADD,yBAIEA,EAAIC,MAJN,kEAOA,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,WAAiCC,EAAOL,GAAxC,uFACaC,IAAAA,IAAA,UACbH,EADa,iCACoBD,EADpB,kBACqCQ,EADrC,iBACmDL,IAFhE,cACCE,EADD,yBAIEA,EAAIC,MAJN,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAgCf,GAAhC,uFACaU,IAAAA,IAAA,cAChBH,EADgB,kBACEP,EADF,oBACgBM,EADhB,SADb,cACCK,EADD,yBAIEA,EAAIC,MAJN,kEAOA,SAAenB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BO,GAA/B,gGAEeU,IAAAA,IAAA,UACbH,EADa,kBACKP,EADL,4BAC2BM,IAH1C,cAEGK,EAFH,yBAKIA,EAAIC,MALR,gCAOHI,QAAQC,IAAI,KAAMC,SAPf,gFAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BnB,GAA5B,gGAEeU,IAAAA,IAAA,gBAChBH,EADgB,kBACEP,EADF,4BACwBM,EADxB,WAFf,cAEGK,EAFH,yBAKIA,EAAIC,MALR,gCAOHI,QAAQC,IAAI,KAAMC,SAPf,gF","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/fetchMovies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  list-style: none;\n  padding: 0;\n  flex-wrap: wrap;\n  gap: 8px;\n`;\n\nexport const ListItem = styled.li`\n  width: 180px;\n`;\n\nexport const Title = styled.h3`\n  font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande',\n    'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const Text = styled.p`\n  font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande',\n    'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchActorsFilm } from 'services/fetchMovies';\nimport { List, Title, Text, ListItem, Img } from './Cast.styled';\nimport defaultImage from '../../Images/default-poster.jpg';\n\nexport default function Cast() {\n  const [actors, setActors] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchActorsFilm(movieId).then(setActors);\n  }, [movieId]);\n\n  const IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w500';\n\n  return (\n    <List>\n      {actors?.cast.map(({ name, character, profile_path, id }) => {\n        const IMG = profile_path\n          ? `${IMAGE_BASE_URL}/${profile_path}`\n          : defaultImage;\n        return (\n          <ListItem key={id}>\n            {' '}\n            <Img src={IMG} alt=\"\" width=\"150\" />\n            <Title>{name}</Title>\n            <Text>Character: {character}</Text>\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = `4d4e27deea421fc269c2758df5384469`;\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function fetchTrendingFilms(page) {\n  const res = await axios.get(\n    `${BASE_URL}/trending/movie/week?api_key=${API_KEY}&page=${page}`\n  );\n  return res.data;\n}\n\nexport async function fetchMovieByQuery(query, page) {\n  const res = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`\n  );\n  return res.data;\n}\n\nexport async function movieDetailsById(id) {\n  const res = await axios.get(`\n  ${BASE_URL}/movie/${id}?api_key=${API_KEY}\n  `);\n  return res.data;\n}\n\nexport async function fetchActorsFilm(id) {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n    );\n    return res.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function fetchReviews(id) {\n  try {\n    const res = await axios.get(`\n    ${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}\n    `);\n    return res.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n"],"names":["List","styled","ListItem","Title","Text","Img","Cast","useState","actors","setActors","movieId","useParams","useEffect","fetchActorsFilm","then","cast","map","name","character","profile_path","id","IMG","defaultImage","src","alt","width","API_KEY","BASE_URL","fetchTrendingFilms","page","axios","res","data","fetchMovieByQuery","query","movieDetailsById","console","log","message","fetchReviews"],"sourceRoot":""}